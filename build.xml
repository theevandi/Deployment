<?xml version="1.0" encoding="UTF-8"?>
<project name="UNA" basedir="." default="test">

    <property file="${project.basedir}/build.properties" override="true" />
    <property name="build" value="0" override="yes" />
    <property name="modules" value="" override="yes" />

    <if>
        <not><isset property="composer" /></not>
        <then><property name="composer" value="${project.basedir}/tests/composer.phar" override="yes" /></then>
    </if>
    <if>
        <not><isset property="php" /></not>
        <then><property name="php" value="php" override="yes" /></then>
    </if>


    <if>
        <not><isset property="db_name" /></not>
        <then><property name="db_name" value="test" override="yes" /></then>
    </if>
    <if>
        <not><isset property="db_user" /></not>
        <then><property name="db_user" value="root" override="yes" /></then>
    </if>
    <if>
        <not><isset property="db_password" /></not>
        <then><property name="db_password" value="" override="yes" /></then>
    </if>


    <if>
        <not><isset property="http_host" /></not>
        <then><property name="http_host" value="localhost" override="yes" /></then>
    </if>
    <if>
        <not><isset property="http_path" /></not>
        <then><property name="http_path" value="/" override="yes" /></then>
    </if>
    <if>
        <not><isset property="php_self" /></not>
        <then><property name="php_self" value="${http_path}install/index.php" override="yes" /></then>
    </if>
    <if>
        <and>
            <not><isset property="doc_root" /></not>
            <isset property="deploy_path" />
        </and>
        <then><property name="doc_root" value="${deploy_path}" override="yes" /></then>
    </if>


    <fileset dir="${project.basedir}" defaultexcludes="true" id="files_dist">
        <include name="**/*" />
        <exclude name="**/*.swp" />
        <exclude name="inc/header*" />
        <exclude name="build.xml" />
        <exclude name="build.properties" />
        <exclude name="storage/**/*" />
        <exclude name="samples/**" />
        <exclude name="scripts/**" />
        <exclude name="tests/**" />
        <exclude name="packages/**" />
        <exclude name="upgrade/**" />
    </fileset>

    <fileset dir="${project.basedir}" defaultexcludes="true" id="doc_files">
        <include name="**/*" />
        <exclude name="**/*.swp" />
        <exclude name="inc/header*" />
        <exclude name="build.xml" />
        <exclude name="build.properties" />
        <exclude name="storage/**/*" />
        <exclude name="samples/**" />
        <exclude name="scripts/**" />
        <exclude name="tests/**" />
        <exclude name="packages/**" />
        <exclude name="upgrade/**" />

        <exclude name="cache/**" />
        <exclude name="cache_public/**" />
        <exclude name="logs/**" />
        <exclude name="tmp/**" />
        <exclude name="plugins/**" />
        <exclude name="plugins_public/**" />
        <exclude name="modules/boonex/sites/**" />
        <exclude name="modules/boonex/membership_pricing/**" />
        <exclude name="**/updates/**" />
    </fileset>

    <!-- ============================================  -->
    <!-- Target: prepare                               -->
    <!-- ============================================  -->
    <target name="prepare">
        <echo msg="Prepage: installing necessary components" />
        <exec command="${php} ${composer} install" dir="${project.basedir}/tests" checkreturn="true" />
    </target>

    <!-- ============================================  -->
    <!-- Target: install                               -->
    <!-- ============================================  -->
    <target name="install">
        <echo msg="Installing..." />
        <if>
            <not><isset property="install_base_dir" /></not>
            <then><property name="install_base_dir" value="${project.basedir}" /></then>
        </if>
        <exec command="${php} cmd.php -m ${modules} --db_name=${db_name} --db_user=${db_user} --db_password=${db_password} --server_http_host=${http_host} --server_php_self=${php_self} --server_doc_root=${doc_root}" dir="${install_base_dir}/install" checkreturn="true" />
    </target>

    <!-- ============================================  -->
    <!-- (DEFAULT) Target: test                        -->
    <!-- ============================================  -->
    <target name="test">
        <echo msg="Testing..." />
        <exec command="${php} vendor/bin/phpunit" dir="${project.basedir}/tests" checkreturn="true" />
    </target>

    <!-- ============================================  -->
    <!-- Target: package                               -->
    <!-- ============================================  -->
    <target name="package" depends="clean">
        <tstamp />
        <property name="package_name" value="UNA-${DSTAMP}-${build}" override="yes" />
        <property name="package_file" value="${package_name}.zip" />
        <echo msg="Packaging ${package_file} file..." />

        <mkdir dir="${project.basedir}/packages" />
        <delete dir="${project.basedir}/packages/tmp" quiet="true" />
        <delete file="${project.basedir}/packages/${package_file}" quiet="true" />

        <copy todir="${project.basedir}/packages/tmp/${package_name}">
            <fileset refid="files_dist" />
        </copy>

        <zip destfile="${project.basedir}/packages/${package_file}">
            <fileset dir="${project.basedir}/packages/tmp" defaultexcludes="true" />
        </zip>

        <delete dir="${project.basedir}/packages/tmp" quiet="true" />

    </target>

    <!-- ============================================  -->
    <!-- Target: package_upgrade                       -->
    <!-- ============================================  -->
    <target name="package_upgrade">
        <tstamp />
        <propertyprompt propertyName="version_from" promptText="Enter version to upgrade from" />
        <propertyprompt propertyName="version_to" promptText="Enter version to upgrade to" />
        <property name="package_name" value="UNA-Patch-v.${version_from}-to-v.${version_to}" override="yes" />
        <property name="package_file" value="${package_name}.zip" />
        <echo msg="Packaging ${package_file} file..." />

        <mkdir dir="${project.basedir}/packages" />
        <delete dir="${project.basedir}/packages/tmp" quiet="true" />
        <delete file="${project.basedir}/packages/${package_file}" quiet="true" />

        <copy todir="${project.basedir}/packages/tmp/${package_name}">
            <fileset dir="${project.basedir}/upgrade" defaultexcludes="true">
                <include name="classes/**/*" />
                <include name="BxDolUpgradeCron.php" />
                <include name="files/${version_from}-*/**/*" />
                <include name="files/*-${version_to}/**/*" />
            </fileset>
        </copy>

        <zip destfile="${project.basedir}/packages/${package_file}">
            <fileset dir="${project.basedir}/packages/tmp" defaultexcludes="true" />
        </zip>

        <delete dir="${project.basedir}/packages/tmp" quiet="true" />

    </target>

    <!-- ============================================  -->
    <!-- Target: package_all_modules                   -->
    <!-- ============================================  -->
    <target name="package_all_modules">
        <property name="vendor" value="boonex" override="yes" />
        
        <foreach param="module" target="package_module">
            <fileset dir="${project.basedir}/modules/${vendor}">
                <include name="*" />
            </fileset>
        </foreach>

    </target>

    <!-- ============================================  -->
    <!-- Target: package_all_langs                     -->
    <!-- ============================================  -->
    <target name="package_all_langs">
        <property name="vendor" value="boonex" override="yes" />
        
        <foreach param="module" target="package_lang">
            <fileset dir="${project.basedir}/modules/${vendor}">
                <include name="*" />
            </fileset>
        </foreach>

        <if>
            <available file="${project.basedir}/modules/${vendor}/english/data/langs/system/en.xml" type="file" />
            <then>            
                <mkdir dir="${project.basedir}/packages/en/system" />
                <delete dir="${project.basedir}/packages/en/system" quiet="true" />

                <echo msg="Copying lang file for system module..." />
                
                <copy todir="${project.basedir}/packages/en/system">
                    <fileset dir="${project.basedir}/modules/${vendor}/english/data/langs/system" defaultexcludes="true" />
                </copy>
            </then>            
        </if>
                
    </target>
    
    <!-- ============================================  -->
    <!-- Target: package_module                        -->
    <!-- ============================================  -->
    <target name="package_module">
        <tstamp />
        <property name="vendor" value="boonex" override="yes" />
        <property name="module" value="antispam" override="yes" />

        <if>
            <available file="${project.basedir}/modules/${vendor}/${module}/install/config.php" type="file" />
            <then>
                <php expression="eval('include(&quot;${project.basedir}/modules/${vendor}/${module}/install/config.php&quot;); return $aConfig[&quot;version&quot;];')" returnProperty="module_version" />
                <property name="package_name" value="${module}" />
                <property name="package_file" value="${package_name}-v.${module_version}.zip" />

                <echo msg="Packaging ${package_file} file..." />

                <mkdir dir="${project.basedir}/packages" />
                <delete dir="${project.basedir}/packages/tmp" quiet="true" />
                <delete file="${project.basedir}/packages/${package_file}" quiet="true" />

                <copy todir="${project.basedir}/packages/tmp/${package_name}">
                    <fileset dir="${project.basedir}/modules/${vendor}/${module}" defaultexcludes="true">
                        <exclude name="updates/" />
                    </fileset>
                </copy>

                <zip destfile="${project.basedir}/packages/${package_file}">
                    <fileset dir="${project.basedir}/packages/tmp" defaultexcludes="true" />
                </zip>

                <delete dir="${project.basedir}/packages/tmp" quiet="true" />
            </then>
        </if>

    </target>

    <!-- ============================================  -->
    <!-- Target: package_lang                          -->
    <!-- ============================================  -->
    <target name="package_lang">
        <tstamp />
        <property name="vendor" value="boonex" override="yes" />
        <property name="module" value="antispam" override="yes" />

        <if>
            <and>
                <available file="${project.basedir}/modules/${vendor}/${module}/install/config.php" type="file" />
                <not><equals arg1="${module}" arg2="attendant" /></not>
                <not><equals arg1="${module}" arg2="mapshow" /></not>
                <not><equals arg1="${module}" arg2="una_mods" /></not>
                <not><equals arg1="${module}" arg2="hosting_api" /></not>
                <not><equals arg1="${module}" arg2="market_api" /></not>
            </and>            
            <then>
                <php expression="eval('include(&quot;${project.basedir}/modules/${vendor}/${module}/install/config.php&quot;); return $aConfig[&quot;name&quot;];')" returnProperty="module_name" />

                <echo msg="Copying lang file for ${module} module..." />

                <mkdir dir="${project.basedir}/packages" />
                <mkdir dir="${project.basedir}/packages/en" />
                <delete dir="${project.basedir}/packages/en/${module_name}" quiet="true" />

                <copy todir="${project.basedir}/packages/en/${module_name}">
                    <fileset dir="${project.basedir}/modules/${vendor}/${module}/install/langs" defaultexcludes="true">
                        <exclude name="ru.xml" />
                    </fileset>
                </copy>
            </then>
        </if>

    </target>

    <!-- ============================================  -->
    <!-- Target: deploy                                -->
    <!-- ============================================  -->
    <target name="deploy">
        <property name="deploy_path" value="/var/www" override="yes" />
        <echo msg="Deploying to '${deploy_path}' folder..." />

        <delete failonerror="true">
            <fileset dir="${deploy_path}">
                <include name="**/*" />
            </fileset>
        </delete>

        <copy todir="${deploy_path}">
            <fileset refid="files_dist" />
        </copy>

        <phingcall target="change_permissions">
            <property name="files_path" value="${deploy_path}" />
        </phingcall>

        <phingcall target="install">
            <property name="install_base_dir" value="${deploy_path}" />
        </phingcall>

        <delete dir="${deploy_path}/install" failonerror="true" />

    </target>

    <!-- ============================================  -->
    <!-- Target: copy files for doc generation         -->
    <!-- ============================================  -->
    <target name="copy_for_doc">
        <property name="path" value="/tmp/doc_files" override="yes" />
        <echo msg="Copying to '${path}' folder..." />

        <delete failonerror="true">
            <fileset dir="${path}">
                <include name="**/*" />
            </fileset>
        </delete>

        <copy todir="${path}">
            <fileset refid="doc_files" />
        </copy>
    </target>

    <!-- ============================================  -->
    <!-- Target: change permissions                    -->
    <!-- ============================================  -->
    <target name="change_permissions">
        <property name="files_path" value="${project.basedir}" override="yes" />
        <echo msg="Change permissions in '${files_path}' folder..." />

        <chmod file="${files_path}/cache" mode="0777" />
        <chmod file="${files_path}/cache_public" mode="0777" />
        <chmod file="${files_path}/logs" mode="0777" />
        <chmod file="${files_path}/tmp" mode="0777" />
        <chmod file="${files_path}/storage" mode="0777" />
        <chmod file="${files_path}/plugins/ffmpeg/ffmpeg.exe" mode="0755" />
    </target>

    <!-- ============================================  -->
    <!-- Target: clean                                 --> 
    <!-- ============================================  -->
    <target name="clean">
        <echo msg="Cleaning..." />
        <delete dir="${project.basedir}/tests/vendor" quiet="true" />
        <delete includeemptydirs="true">
            <fileset dir="${project.basedir}/cache">
                <include name="**/*" />
                <exclude name=".htaccess" />
            </fileset>
        </delete>
        <delete includeemptydirs="true">
            <fileset dir="${project.basedir}/cache_public">
                <include name="**/*" />
                <exclude name=".htaccess" />
            </fileset>
        </delete>
        <delete includeemptydirs="true">
            <fileset dir="${project.basedir}/logs">
                <include name="**/*" />
                <exclude name=".htaccess" />
                <exclude name="clover.xml" />
                <exclude name="phpcdp.xml" />
                <exclude name="junit.xml" />
            </fileset>
        </delete>
        <delete includeemptydirs="true">
            <fileset dir="${project.basedir}/tmp">
                <include name="**/*" />
                <exclude name=".htaccess" />
            </fileset>
        </delete>
    </target>

    <target name="clean_install" depends="clean">
        <echo msg="Install cleaning..." />
        <delete file="${project.basedir}/inc/header.inc.php" quiet="true" />
    </target>

</project>
